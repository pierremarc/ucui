{"version":3,"file":"index-BVMjhfhj.js","sources":["../../src/lib/option.ts","../../src/data.ts","../../src/store.ts","../../src/lib/dom.ts","../../src/lib/html.ts","../../src/lib/util.ts","../../src/clock.ts","../../src/util.ts","../../src/san.ts","../../src/engine.ts","../../src/play.ts","../../src/input.ts","../../src/game.ts","../../src/home.ts","../../src/lock-screen.ts","../../src/movelist.ts","../../src/main.ts"],"sourcesContent":["import { tuple } from \"./tuple.js\";\n\nconst _none = \"none\";\nconst _some = \"some\";\n\nexport type None = {\n    readonly tag: typeof _none;\n};\n\nexport type Some<T> = {\n    readonly tag: typeof _some;\n    value: T;\n};\n\nexport type Option<T> = None | Some<T>;\n\nexport const none: Option<never> = { tag: _none };\n\nexport const some = <T>(value: T): Option<T> => ({ tag: _some, value });\n\nexport const isOption = (n: unknown): n is Option<unknown> =>\n    typeof n === \"object\" &&\n    n !== null &&\n    \"tag\" in n &&\n    // rome-ignore lint/suspicious/noExplicitAny: it is a type assertion\n    ((n as any)[\"tag\"] === _none || (n as any)[\"tag\"] === _some);\n\nexport const isNone = (o: Option<unknown>): o is None => o.tag === \"none\";\n\nexport const isSome = <T>(o: Option<T>): o is Some<T> => o.tag === \"some\";\n\nexport const map =\n    <T, R>(f: (v: T) => R) =>\n    (o: Option<T>): Option<R> =>\n        isNone(o) ? none : some(f(o.value));\n\nexport const bind =\n    <T, R = unknown>(f: (v: T) => Option<R>) =>\n    (o: Option<T>): Option<R> =>\n        isNone(o) ? none : f(o.value);\n\nexport const alt =\n    <R>(f: () => R) =>\n    (o: Option<unknown>): Option<R> =>\n        isSome(o) ? none : some(f());\n\nexport const orElse =\n    <T>(value: T) =>\n    (o: Option<T>) =>\n        isNone(o) ? value : o.value;\n\nexport const orElseL =\n    <T>(value: () => T) =>\n    (o: Option<T>) =>\n        isNone(o) ? value() : o.value;\n\nexport const fromNullable = <T>(value: T | null | undefined): Option<T> =>\n    value === null || value === undefined ? none : some(value);\n\nexport const toNullable = <T>(opt: Option<T>): T | null =>\n    isSome(opt) ? opt.value : null;\n\nexport const map2 =\n    <A, B = unknown, C = unknown>(\n        fa: (a: Option<A>) => Option<B>,\n        fb: (a: Option<B>) => C\n    ) =>\n    (a: Option<A> | A) => {\n        if (isOption(a)) {\n            return fb(fa(a));\n        }\n        return fb(fa(some(a)));\n    };\n\nexport const pipe2 = <A, B, C>(\n    a: Option<A>,\n    fa: (a: Option<A>) => Option<B>,\n    fb: (a: Option<B>) => C\n) => fb(fa(a));\n\nexport const merge = <A, B>(a: Option<A>, b: Option<B>) =>\n    bind((sa: A) => map((sb: B) => tuple(sa, sb))(b))(a);\n","import { Move } from \"./store\";\n\nexport const startingLegalMoves: Move[] = [\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"A2\",\n    capture: null,\n    to: \"A3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"A2\",\n    capture: null,\n    to: \"A4\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Knight\",\n    from: \"B1\",\n    capture: null,\n    to: \"C3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"B2\",\n    capture: null,\n    to: \"B3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"B2\",\n    capture: null,\n    to: \"B4\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"C2\",\n    capture: null,\n    to: \"C3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"C2\",\n    capture: null,\n    to: \"C4\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"D2\",\n    capture: null,\n    to: \"D3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"D2\",\n    capture: null,\n    to: \"D4\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"E2\",\n    capture: null,\n    to: \"E3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"E2\",\n    capture: null,\n    to: \"E4\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"F2\",\n    capture: null,\n    to: \"F3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"F2\",\n    capture: null,\n    to: \"F4\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Knight\",\n    from: \"G1\",\n    capture: null,\n    to: \"F3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Knight\",\n    from: \"G1\",\n    capture: null,\n    to: \"H3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"G2\",\n    capture: null,\n    to: \"G3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"G2\",\n    capture: null,\n    to: \"G4\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"H2\",\n    capture: null,\n    to: \"H3\",\n    promotion: null,\n  },\n  {\n    _tag: \"Normal\",\n    role: \"Pawn\",\n    from: \"H2\",\n    capture: null,\n    to: \"H4\",\n    promotion: null,\n  },\n];\n","import { startingLegalMoves } from \"./data\";\n\nexport type Screen = \"home\" | \"game\" | \"movelist\";\n\nexport type Role = \"Pawn\" | \"Knight\" | \"Bishop\" | \"Rook\" | \"Queen\" | \"King\";\n\nexport type File = \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"H\";\nexport type Rank = \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\";\nexport type Square = `${File}${Rank}`;\n\nexport const file = (s: Square) => s[0] as File;\nexport const rank = (s: Square) => s[1] as Rank;\n\nexport type Nullable<T> = T | null;\n\nexport type MoveNormal = {\n  readonly _tag: \"Normal\";\n  role: Role;\n  from: Square;\n  capture: Nullable<Role>;\n  to: Square;\n  promotion: Nullable<Role>;\n};\n\nexport const moveNormal = (\n  role: Role,\n  from: Square,\n  to: Square,\n  capture: Nullable<Role>,\n  promotion: Nullable<Role>\n): MoveNormal => ({\n  _tag: \"Normal\",\n  role,\n  from,\n  to,\n  capture: capture,\n  promotion: promotion,\n});\n\nexport type MoveEnPassant = {\n  readonly _tag: \"EnPassant\";\n  from: Square;\n  to: Square;\n};\nexport const moveEnPassant = (from: Square, to: Square): MoveEnPassant => ({\n  _tag: \"EnPassant\",\n  from,\n  to,\n});\n\nexport type MoveCastle = {\n  readonly _tag: \"Castle\";\n  king: Square;\n  rook: Square;\n};\n\nexport const MoveCastle = (king: Square, rook: Square): MoveCastle => ({\n  _tag: \"Castle\",\n  king,\n  rook,\n});\n\nexport type Move = MoveNormal | MoveCastle | MoveEnPassant;\n\nexport const getMoveRole = (move: Move): Role => {\n  switch (move._tag) {\n    case \"Castle\":\n      return \"King\";\n    case \"EnPassant\":\n      return \"Pawn\";\n    case \"Normal\":\n      return move.role;\n  }\n};\n\nexport type Color = \"black\" | \"white\";\n\nexport const otherColor = (color: Color): Color =>\n  color === \"black\" ? \"white\" : \"black\";\n\nexport type ClockInitial = { readonly _tag: \"initial\" };\n\nexport const clockInitial = (): ClockInitial => ({ _tag: \"initial\" });\n\nexport type ClockRunning = {\n  readonly _tag: \"running\";\n  turn: Color;\n  start_time: number;\n  remaining_white: number;\n  remaining_black: number;\n};\n\nexport const clockRunning = (\n  turn: Color,\n  start_time: number,\n  remaining_white: number,\n  remaining_black: number\n): ClockRunning => ({\n  _tag: \"running\",\n  turn,\n  start_time,\n  remaining_white,\n  remaining_black,\n});\n\nexport type ClockFlag = {\n  readonly _tag: \"flag\";\n  color: Color; // fallen color\n  other: number; // other's time\n};\n\nexport const clockFlag = (color: Color, other: number): ClockFlag => ({\n  _tag: \"flag\",\n  color,\n  other,\n});\n\nexport type ClockState = ClockInitial | ClockRunning | ClockFlag;\n\nexport type Position = {\n  turn: Color;\n  legalMoves: Move[];\n};\n\nexport const position = (turn: Color, legalMoves: Move[]): Position => ({\n  legalMoves,\n  turn,\n});\n\nexport type InputNone = {\n  readonly _tag: \"none\";\n};\n\nexport const inputNone = (): InputNone => ({\n  _tag: \"none\",\n});\n\nexport type InputRole = {\n  readonly _tag: \"role\";\n  role: Role;\n};\n\nexport const inputRole = (role: Role): InputRole => ({\n  _tag: \"role\",\n  role,\n});\n\nexport type InputMove = {\n  readonly _tag: \"move\";\n  move: Move;\n};\n\nexport const inputMove = (move: Move): InputMove => ({\n  _tag: \"move\",\n  move,\n});\n\nexport type Input = InputNone | InputRole | InputMove;\n\nexport const getInputRole = (input: Input): Nullable<Role> => {\n  switch (input._tag) {\n    case \"none\":\n      return null;\n    case \"role\":\n      return input.role;\n    case \"move\":\n      return getMoveRole(input.move);\n  }\n};\n\ntype EngineIdle = { readonly _tag: \"idle\" };\nexport const engineIdle = (): EngineIdle => ({ _tag: \"idle\" });\ntype EngineComputing = { readonly _tag: \"compute\" };\nexport const engineCompute = (): EngineComputing => ({ _tag: \"compute\" });\ntype EngineMove = { readonly _tag: \"move\"; move: Move; legals: Move[] };\nexport const engineMove = (move: Move, legals: Move[]): EngineMove => ({\n  _tag: \"move\",\n  move,\n  legals,\n});\n\nexport type EngineState = EngineIdle | EngineComputing | EngineMove;\nexport const defaultEngine = (): EngineState => engineIdle();\n\nexport type MoveHist = {\n  move: Move;\n  legals: Move[];\n};\nexport const moveHist = (move: Move, legals: Move[]): MoveHist => ({\n  move,\n  legals,\n});\n\nexport const defaultInput = (): Input => inputNone();\nexport const defaultPosition = () => position(\"white\", startingLegalMoves);\nexport const defaultScreen = (): Screen => \"home\";\nexport const defaultMoveList = (): MoveHist[] => [];\nexport const defaultClock = (): ClockState => clockInitial();\n\nlet state = {\n  screen: defaultScreen(),\n  moveList: defaultMoveList(),\n  clock: defaultClock(),\n  position: defaultPosition(),\n  input: defaultInput(),\n  started: false,\n  engine: defaultEngine(),\n  lockScreen: false,\n  outcome: null as Nullable<string>,\n};\n\nexport type State = typeof state;\nexport type StateKey = keyof State;\n\nlet subs: [StateKey, (key: StateKey) => void][] = [];\n\nexport const dispatch = <K extends StateKey>(\n  key: K,\n  f: (val: State[K]) => State[K]\n) => {\n  let val = get(key);\n  state[key] = f(val);\n  if (key !== \"clock\") {\n    console.groupCollapsed(key);\n    console.debug(\"from\", val);\n    console.debug(\"to\", state[key]);\n    console.groupEnd();\n  }\n  subs.filter(([k, _]) => k == key).map(([_, cb]) => cb(key));\n  return get(key);\n};\n\nexport const assign = <K extends StateKey>(key: K, val: State[K]) =>\n  dispatch(key, () => val);\n\nexport const get = <K extends StateKey>(key: K): State[K] =>\n  JSON.parse(JSON.stringify(state[key]));\n\nexport const allKeys = () => Object.keys(state) as StateKey[];\n\nexport const subscribe =\n  (...keys: StateKey[]) =>\n  (callback: (key: StateKey) => void) =>\n    (subs = subs.concat(keys.map((k) => [k, callback])));\n\nexport const clearSubscriptions = (filter: (k: StateKey) => boolean) =>\n  (subs = subs.filter(([k, _]) => filter(k)));\n","interface ToString {\n  toString(): string;\n}\n\nexport const attrs = <E extends HTMLElement>(\n  e: E,\n  f: (s: (k: string, v: ToString) => void) => void\n) => {\n  const set = (k: string, v: ToString) => {\n    e.setAttribute(k, v.toString());\n  };\n  f(set);\n  return e;\n};\n\nexport const events = <E extends HTMLElement>(\n  e: E,\n  f: (\n    s: <K extends keyof HTMLElementEventMap>(\n      k: K,\n      listener: (ev: HTMLElementEventMap[K]) => void\n    ) => void\n  ) => void\n) => {\n  const add = <K extends keyof HTMLElementEventMap>(\n    k: K,\n    listener: (ev: HTMLElementEventMap[K]) => void\n  ) => {\n    e.addEventListener(k, listener);\n  };\n  f(add);\n  return e;\n};\n\nexport function emptyElement(elem: Node) {\n  while (elem.firstChild) {\n    removeElement(elem.firstChild);\n  }\n  return elem;\n}\n\nexport function removeElement(elem: Node, keepChildren = false) {\n  if (!keepChildren) {\n    emptyElement(elem);\n  }\n  const parent = elem.parentNode;\n  if (parent) {\n    parent.removeChild(elem);\n  }\n}\n","import { attrs, emptyElement } from \"./dom.js\";\nimport { isOption, map, Option } from \"./option.js\";\n\nexport interface HTMLTags {\n  a: HTMLAnchorElement;\n  abbr: HTMLElement;\n  address: HTMLElement;\n  area: HTMLAreaElement;\n  article: HTMLElement;\n  aside: HTMLElement;\n  audio: HTMLAudioElement;\n  b: HTMLElement;\n  base: HTMLBaseElement;\n  bdi: HTMLElement;\n  bdo: HTMLElement;\n  big: HTMLElement;\n  blockquote: HTMLElement;\n  body: HTMLBodyElement;\n  br: HTMLBRElement;\n  button: HTMLButtonElement;\n  canvas: HTMLCanvasElement;\n  caption: HTMLElement;\n  cite: HTMLElement;\n  code: HTMLElement;\n  col: HTMLTableColElement;\n  colgroup: HTMLTableColElement;\n  data: HTMLElement;\n  datalist: HTMLDataListElement;\n  dd: HTMLElement;\n  del: HTMLElement;\n  details: HTMLElement;\n  dfn: HTMLElement;\n  dialog: HTMLElement;\n  div: HTMLDivElement;\n  dl: HTMLDListElement;\n  dt: HTMLElement;\n  em: HTMLElement;\n  embed: HTMLEmbedElement;\n  fieldset: HTMLFieldSetElement;\n  figcaption: HTMLElement;\n  figure: HTMLElement;\n  footer: HTMLElement;\n  form: HTMLFormElement;\n  h1: HTMLHeadingElement;\n  h2: HTMLHeadingElement;\n  h3: HTMLHeadingElement;\n  h4: HTMLHeadingElement;\n  h5: HTMLHeadingElement;\n  h6: HTMLHeadingElement;\n  head: HTMLElement;\n  header: HTMLElement;\n  hgroup: HTMLElement;\n  hr: HTMLHRElement;\n  html: HTMLHtmlElement;\n  i: HTMLElement;\n  iframe: HTMLIFrameElement;\n  img: HTMLImageElement;\n  input: HTMLInputElement;\n  ins: HTMLModElement;\n  kbd: HTMLElement;\n  keygen: HTMLElement;\n  label: HTMLLabelElement;\n  legend: HTMLLegendElement;\n  li: HTMLLIElement;\n  link: HTMLLinkElement;\n  main: HTMLElement;\n  map: HTMLMapElement;\n  mark: HTMLElement;\n  menu: HTMLElement;\n  menuitem: HTMLElement;\n  meta: HTMLMetaElement;\n  meter: HTMLElement;\n  nav: HTMLElement;\n  noscript: HTMLElement;\n  // object: HTMLObjectElement;\n  ol: HTMLOListElement;\n  optgroup: HTMLOptGroupElement;\n  option: HTMLOptionElement;\n  output: HTMLElement;\n  p: HTMLParagraphElement;\n  param: HTMLParamElement;\n  picture: HTMLElement;\n  pre: HTMLPreElement;\n  progress: HTMLProgressElement;\n  q: HTMLQuoteElement;\n  rp: HTMLElement;\n  rt: HTMLElement;\n  ruby: HTMLElement;\n  s: HTMLElement;\n  samp: HTMLElement;\n  script: HTMLScriptElement;\n  section: HTMLElement;\n  select: HTMLSelectElement;\n  small: HTMLElement;\n  source: HTMLSourceElement;\n  span: HTMLSpanElement;\n  strong: HTMLElement;\n  style: HTMLStyleElement;\n  sub: HTMLElement;\n  summary: HTMLElement;\n  sup: HTMLElement;\n  table: HTMLTableElement;\n  tbody: HTMLTableSectionElement;\n  td: HTMLTableCellElement;\n  textarea: HTMLTextAreaElement;\n  tfoot: HTMLTableSectionElement;\n  th: HTMLTableCellElement;\n  thead: HTMLTableSectionElement;\n  time: HTMLElement;\n  title: HTMLTitleElement;\n  tr: HTMLTableRowElement;\n  track: HTMLTrackElement;\n  u: HTMLElement;\n  ul: HTMLUListElement;\n  var: HTMLElement;\n  video: HTMLVideoElement;\n  wbr: HTMLElement;\n}\n\nconst createBase = <T extends keyof HTMLTags>(tag: T): HTMLTags[T] =>\n  document.createElement(tag) as HTMLTags[T];\n\nexport const appendText = (text: string) => (node: HTMLElement) => {\n  return node.appendChild(document.createTextNode(text));\n};\n\nexport type BaseNode = Element | HTMLElement | string | number;\n\nexport type AcNode = BaseNode | Option<BaseNode>;\n\nconst createWithClass = <T extends keyof HTMLTags>(\n  tag: T,\n  className: string\n) => {\n  const node = createBase(tag);\n  node.setAttribute(\"class\", className);\n  return node;\n};\n\nconst appendLiteral = (node: HTMLElement) => (value: string | number) => {\n  if (typeof value === \"number\") {\n    appendText(value.toLocaleString())(node);\n  } else {\n    appendText(value)(node);\n  }\n};\n\nconst appendElement = (node: HTMLElement) => (value: HTMLElement | Element) => {\n  node.appendChild(value);\n};\n\nconst appendBaseNode = (node: HTMLElement, value: BaseNode) => {\n  if (typeof value === \"number\" || typeof value === \"string\") {\n    appendLiteral(node)(value);\n  } else {\n    appendElement(node)(value);\n  }\n};\n\nexport const appendNode = (node: HTMLElement) => (value: AcNode) => {\n  if (isOption(value)) {\n    map((inner: BaseNode) => appendBaseNode(node, inner))(value);\n  } else {\n    appendBaseNode(node, value);\n  }\n};\n\nexport const replaceNodeContent =\n  (node: HTMLElement) =>\n  (...values: AcNode[]) => {\n    const append = appendNode(node);\n    emptyElement(node);\n    values.forEach(append);\n  };\n\nexport const hasClass = (c: string) => (node: HTMLElement) =>\n  node.classList.contains(c);\n\nexport const addClass = (c: string) => (node: HTMLElement) =>\n  node.classList.add(c);\n\nexport const removeClass = (c: string) => (node: HTMLElement) =>\n  node.classList.remove(c);\n\nconst createWithChildren = <T extends keyof HTMLTags>(\n  tag: T,\n  className: string,\n  ns: AcNode[]\n) => {\n  const node = createWithClass(tag, className);\n  ns.forEach(appendNode(node));\n  return node;\n};\n\nexport const DIV = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"div\", className, ns);\n\nexport const SPAN = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"span\", className, ns);\n\nexport const LABEL = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"label\", className, ns);\n\nexport const FIELDSET = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"fieldset\", className, ns);\n\nexport const H1 = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"h1\", className, ns);\n\nexport const H2 = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"h2\", className, ns);\n\nexport const H3 = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"h3\", className, ns);\n\nexport const BUTTON = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"button\", className, ns);\n\nexport const SUPERSCRIPT = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"sup\", className, ns);\n\nexport const TEXTAREA = (className: string, ...ns: AcNode[]) =>\n  createWithChildren(\"textarea\", className, ns);\n\nexport type InputType =\n  | \"checkbox\"\n  | \"date\"\n  | \"button\"\n  | \"email\"\n  | \"color\"\n  | \"hidden\"\n  | \"datetime-local\"\n  | \"month\"\n  | \"file\"\n  | \"password\"\n  | \"image\"\n  | \"range\"\n  | \"number\"\n  | \"search\"\n  | \"radio\"\n  | \"tel\"\n  | \"reset\"\n  | \"time\"\n  | \"submit\"\n  | \"week\"\n  | \"text\"\n  | \"url\";\n\nexport const INPUT = (className: string, inputType: InputType) =>\n  attrs(createWithClass(\"input\", className), (set) => set(\"type\", inputType));\n\nexport const ANCHOR = (className: string, href: string, ...ns: AcNode[]) =>\n  attrs(createWithChildren(\"a\", className, ns), (set) => set(\"href\", href));\n\nexport const IMG = (className: string, src: string) => {\n  const el = createWithClass(\"img\", className);\n  el.setAttribute(\"src\", src);\n  return el;\n};\n\nexport const CANVAS = (className: string, width: number, height: number) =>\n  attrs(createWithClass(\"canvas\", className), (set) => {\n    set(\"width\", width);\n    set(\"height\", height);\n  });\n\nexport const IFRAME = (className: string, src: string) =>\n  attrs(createWithClass(\"iframe\", className), (set) => {\n    set(\"src\", src);\n  });\n\n// export const attrs = <E extends HTMLElement>(\n//     e: E,\n//     f: (s: (k: string, v: string) => void) => void\n// ) => {\n//     const set = (k: string, v: string) => {\n//         e.setAttribute(k, v);\n//     };\n//     f(set);\n//     return e;\n// };\n\n// export const events = <E extends HTMLElement>(\n//     e: E,\n//     f: (\n//         s: <K extends keyof HTMLElementEventMap>(\n//             k: K,\n//             listener: (ev: HTMLElementEventMap[K]) => void\n//         ) => void\n//     ) => void\n// ) => {\n//     const add = <K extends keyof HTMLElementEventMap>(\n//         k: K,\n//         listener: (ev: HTMLElementEventMap[K]) => void\n//     ) => {\n//         e.addEventListener(k, listener);\n//     };\n//     f(add);\n//     return e;\n// };\n","import { none, some } from \"./option.js\";\n\nexport const tryNumber = (n: unknown) => {\n  if (typeof n === \"number\") {\n    return some(n);\n  }\n  if (typeof n === \"string\") {\n    const tn = parseFloat(n);\n    if (!Number.isNaN(tn)) {\n      return some(tn);\n    }\n  }\n  return none;\n};\n\nexport const index = <T>(i: number, xs: T[]) =>\n  i >= 0 && i < xs.length ? some(xs[i]) : none;\n\nexport const iife = <T>(f: () => T) => f();\n\nexport const zip = <T0, T1>(\n  a: T0[] | Readonly<T0[]>,\n  b: T1[] | Readonly<T1[]>\n): [T0, T1][] => {\n  const max = Math.min(a.length, b.length);\n  const result: [T0, T1][] = new Array(max);\n  for (let i = 0; i < max; i += 1) {\n    result[i] = [a[i], b[i]];\n  }\n  return result;\n};\n\nconst withUnit = (suffix: string) => (n: number) => `${n}${suffix}`;\n\nexport const px = withUnit(\"px\");\n\n// export const match =\n//   <D extends string, T extends { _tag: D }>(discriminant: D) =>\n//   <R>(value: T, fn: (value: T) => R) =>\n//     value._tag === discriminant ? some(fn(value)) : none;\n\n// export function convertToMercator(\n//   lonLat: [number, number] | Position\n// ): [number, number] {\n//   var D2R = Math.PI / 180,\n//     // 900913 properties\n//     A = 6378137.0,\n//     MAXEXTENT = 20037508.342789244;\n\n//   // compensate longitudes passing the 180th meridian\n//   // from https://github.com/proj4js/proj4js/blob/master/lib/common/adjust_lon.js\n//   var adjusted =\n//     Math.abs(lonLat[0]) <= 180 ? lonLat[0] : lonLat[0] - sign(lonLat[0]) * 360;\n//   var xy: [number, number] = [\n//     A * adjusted * D2R,\n//     A * Math.log(Math.tan(Math.PI * 0.25 + 0.5 * lonLat[1] * D2R)),\n//   ];\n\n//   // if xy value is beyond maxextent (e.g. poles), return maxextent\n//   if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT;\n//   if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT;\n//   if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT;\n//   if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT;\n\n//   return xy;\n// }\n\n// function sign(x: number) {\n//   return x < 0 ? -1 : x > 0 ? 1 : 0;\n// }\n\nexport const dist = (a: [number, number], b: [number, number]) =>\n  Math.sqrt(Math.pow(b[0] - a[0], 2) + Math.pow(b[1] - a[1], 2));\n\nexport const toggle = <R = void>(\n  left: () => R,\n  right: () => R,\n  init = false\n) => {\n  let value = init;\n\n  return () => {\n    value = !value;\n    return value ? right() : left();\n  };\n};\n","import {\n  addClass,\n  DIV,\n  hasClass,\n  removeClass,\n  replaceNodeContent,\n} from \"./lib/html\";\nimport { iife } from \"./lib/util\";\nimport {\n  assign,\n  clockFlag,\n  clockRunning,\n  ClockState,\n  dispatch,\n  get,\n  Nullable,\n  otherColor,\n  subscribe,\n} from \"./store\";\n\n/// exports\n\nconst white = DIV(\"time white active\", \"--:--\");\nconst black = DIV(\"time black\", \"--:--\");\n\nexport const mountClock = (root: Element) => {\n  root.append(DIV(\"clock\", white, black));\n  renderClock();\n  subscribe(\"clock\")(renderClock);\n};\n\nexport const hitClock = () =>\n  dispatch(\"clock\", (state) => {\n    if (state._tag == \"running\") {\n      toggleActive(white);\n      toggleActive(black);\n      return updateClock({ ...state, turn: otherColor(state.turn) });\n    }\n    return state;\n  });\n\nlet clockIt: Nullable<number> = null;\n\nexport const stopClock = () => clearInterval(clockIt ?? undefined);\n\nexport const startClock = (max_white: number, max_black: number) => {\n  const start = Date.now();\n\n  white_time = 0;\n  white_max_time = max_white;\n  black_time = 0;\n  black_max_time = max_black;\n\n  stopClock();\n\n  clockIt = setInterval(\n    () =>\n      dispatch(\"clock\", (state) => {\n        const newState = updateClock(state);\n        if (newState._tag === \"flag\") {\n          stopClock();\n        }\n        return newState;\n      }),\n    100\n  );\n  assign(\"clock\", clockRunning(\"white\", start, 0, 0));\n};\n\n/// impl\n\n// Our bit of internal state\nlet white_time = 0;\nlet black_time = 0;\nlet white_max_time = 0;\nlet black_max_time = 0;\n\nconst { floor } = Math;\n\nconst formatTime = (millis: number) => {\n  const seconds = millis / 1000;\n  const sec = floor(seconds % 60);\n  const minutes = floor((seconds / 60) % 60);\n  const hours = floor(seconds / 60 / 60);\n\n  const fs = sec < 10 ? `0${sec.toFixed(0)}` : `${sec.toFixed(0)}`;\n  const fm = minutes < 10 ? `0${minutes.toFixed(0)}` : `${minutes.toFixed(0)}`;\n  const fh = hours < 10 ? `0${hours.toFixed(0)}` : `${hours.toFixed(0)}`;\n\n  return seconds >= 3600 ? `${fh}:${fm}:${fs}` : `${fm}:${fs}`;\n};\n\nconst r = removeClass(\"active\");\nconst a = addClass(\"active\");\nconst h = hasClass(\"active\");\nconst toggleActive = (e: HTMLElement) => (h(e) ? r(e) : a(e));\n\nconst renderClock = () => {\n  const setWhite = replaceNodeContent(white);\n  const setBlack = replaceNodeContent(black);\n  const state = get(\"clock\");\n  switch (state._tag) {\n    case \"flag\": {\n      if (state.color === \"white\") {\n        setWhite(\"flag\");\n        setBlack(formatTime(state.other));\n      } else {\n        setBlack(\"flag\");\n        setWhite(formatTime(state.other));\n      }\n      break;\n    }\n    case \"running\": {\n      setBlack(formatTime(state.remaining_black));\n      setWhite(formatTime(state.remaining_white));\n      break;\n    }\n    case \"initial\": {\n      setBlack(\"--:--\");\n      setWhite(\"--:--\");\n      break;\n    }\n  }\n};\n\nconst updateClock = (state: Readonly<ClockState>) => {\n  if (state._tag === \"running\") {\n    let now = Date.now();\n    let total_spent = white_time + black_time;\n    let total = now - state.start_time;\n    let inc = total - total_spent;\n\n    iife(() => {\n      switch (state.turn) {\n        case \"white\":\n          return (white_time += inc);\n        case \"black\":\n          return (black_time += inc);\n      }\n    });\n\n    if (black_time >= black_max_time) {\n      return clockFlag(\"black\", white_max_time - white_time);\n    } else if (white_time >= white_max_time) {\n      return clockFlag(\"white\", black_max_time - black_time);\n    } else {\n      return clockRunning(\n        state.turn,\n        state.start_time,\n        white_max_time - white_time,\n        black_max_time - black_time\n      );\n    }\n  }\n  return { ...state };\n};\n","import { Role } from \"./store\";\n\nexport const ROLE_LIST: Role[] = [\n  \"Pawn\",\n  \"Bishop\",\n  \"Knight\",\n  \"Rook\",\n  \"Queen\",\n  \"King\",\n];\n\nexport const BLACK_PAWN = \"♟\";\nexport const BLACK_ROOK = \"♜\";\nexport const BLACK_KNIGHT = \"♞\";\nexport const BLACK_BISHOP = \"♝\";\nexport const BLACK_QUEEN = \"♛\";\nexport const BLACK_KING = \"♚\";\n\nexport const WHITE_PAWN = \"♙\";\nexport const WHITE_ROOK = \"♖\";\nexport const WHITE_KNIGHT = \"♘\";\nexport const WHITE_BISHOP = \"♗\";\nexport const WHITE_QUEEN = \"♕\";\nexport const WHITE_KING = \"♔\";\n","import { Nullable, Rank, Role, File, Square, Move, file, rank } from \"./store\";\nimport {\n  WHITE_PAWN,\n  WHITE_ROOK,\n  WHITE_KNIGHT,\n  WHITE_BISHOP,\n  WHITE_QUEEN,\n  WHITE_KING,\n} from \"./util\";\n\nexport type CastlingSide = \"KingSide\" | \"QueenSide\";\n\ntype SanNormal = {\n  readonly _tag: \"Normal\";\n  role: Role;\n  capture: boolean;\n  to: Square;\n  rank: Nullable<Rank>;\n  file: Nullable<File>;\n  promotion: Nullable<Role>;\n};\n\nconst sanNormal = (\n  role: Role,\n  capture: boolean,\n  to: Square,\n  rank = null as Nullable<Rank>,\n  file = null as Nullable<File>,\n  promotion = null as Nullable<Role>\n): SanNormal => ({ _tag: \"Normal\", role, capture, to, rank, file, promotion });\n\ntype SanCastle = {\n  readonly _tag: \"Castle\";\n  side: CastlingSide;\n};\n\nconst sanCastle = (side: CastlingSide): SanCastle => ({\n  _tag: \"Castle\",\n  side,\n});\n\ntype SanNull = {\n  readonly _tag: \"null\";\n};\n\nexport type San = SanNormal | SanCastle | SanNull;\n\nconst sanCandidates = (legalMoves: Move[], role: Role, to: Square): Move[] =>\n  legalMoves.filter((move) => {\n    switch (move._tag) {\n      case \"Castle\":\n        return false;\n      case \"EnPassant\":\n        return role == \"Pawn\" && move.to === to;\n      default:\n        return to === move.to && role === move.role;\n    }\n  });\n\nconst disambiguate = (m: Move, moves: Move[]): San => {\n  switch (m._tag) {\n    case \"Normal\": {\n      if (m.role === \"Pawn\") {\n        return sanNormal(\n          \"Pawn\",\n          m.capture !== null,\n          m.to,\n          null,\n          m.capture !== null ? file(m.from) : null,\n          m.promotion\n        );\n      } else {\n        let ambiguous = false;\n        let ambiguous_file = false;\n        let ambiguous_rank = false;\n        for (const candidate of moves) {\n          if (candidate._tag === \"Normal\") {\n            if (\n              m.from != candidate.from &&\n              m.role == candidate.role &&\n              m.to == candidate.to &&\n              m.promotion == candidate.promotion\n            ) {\n              ambiguous = true;\n              if (rank(m.from) == rank(candidate.from)) {\n                ambiguous_rank = true;\n              }\n              if (file(m.from) == file(candidate.from)) {\n                ambiguous_file = true;\n              }\n            }\n          }\n        }\n        return sanNormal(\n          m.role,\n          m.capture !== null,\n          m.to,\n          ambiguous_file ? rank(m.from) : null,\n          ambiguous && (!ambiguous_file || ambiguous_rank)\n            ? file(m.from)\n            : null,\n          m.promotion\n        );\n      }\n    }\n    case \"EnPassant\":\n      return sanNormal(\"Pawn\", true, m.to, null, file(m.from), null);\n    case \"Castle\": {\n      if (file(m.rook) < file(m.king)) {\n        return sanCastle(\"QueenSide\");\n      } else {\n        return sanCastle(\"KingSide\");\n      }\n    }\n  }\n};\n\nconst roleLetter = (role: Role) => role[0];\n\nconst roleSymbol = (role: Role) => {\n  switch (role) {\n    case \"Pawn\":\n      return WHITE_PAWN;\n    case \"Rook\":\n      return WHITE_ROOK;\n    case \"Knight\":\n      return WHITE_KNIGHT;\n    case \"Bishop\":\n      return WHITE_BISHOP;\n    case \"Queen\":\n      return WHITE_QUEEN;\n    case \"King\":\n      return WHITE_KING;\n  }\n};\n\nexport const fromMove = (legalMoves: Move[], move: Move): San => {\n  let legals: Move[] = [];\n  if (move._tag === \"Normal\" && move.role !== \"Pawn\") {\n    legals = sanCandidates(legalMoves, move.role, move.to);\n  }\n  return disambiguate(move, legals);\n};\n\nconst toString = (san: San, symbol: boolean) => {\n  const result: string[] = [];\n  switch (san._tag) {\n    case \"Normal\": {\n      if (san.role !== \"Pawn\") {\n        result.push(symbol ? roleSymbol(san.role) : roleLetter(san.role));\n      }\n      if (san.file !== null) {\n        result.push(san.file.toLowerCase());\n      }\n      if (san.rank !== null) {\n        result.push(san.rank);\n      }\n      if (san.capture) {\n        result.push(\"x\");\n      }\n      result.push(san.to.toLowerCase());\n      if (san.promotion !== null) {\n        result.push(\n          \"=\",\n          symbol ? roleSymbol(san.promotion) : roleLetter(san.promotion)\n        );\n      }\n      break;\n    }\n    case \"Castle\": {\n      if (san.side === \"KingSide\") {\n        result.push(\"O\", \"-\", \"O\");\n      } else {\n        result.push(\"O\", \"-\", \"O\", \"-\", \"O\");\n      }\n      break;\n    }\n    case \"null\":\n      result.push(\"--\");\n  }\n  return result.join(\"\");\n};\n\nexport const formatMove = (move: Move, legals: Move[], symbol = true) =>\n  toString(fromMove(legals, move), symbol);\n","import { events } from \"./lib/dom\";\nimport { DIV, replaceNodeContent } from \"./lib/html\";\nimport { formatMove } from \"./san\";\nimport { assign, get, subscribe } from \"./store\";\n\nconst render = (root: HTMLElement) => {\n  const setEngine = replaceNodeContent(root);\n  const state = get(\"engine\");\n  switch (state._tag) {\n    case \"idle\":\n      return setEngine(\"·\");\n    case \"compute\":\n      return setEngine(DIV(\"compute\"));\n    case \"move\":\n      return setEngine(formatMove(state.move, state.legals));\n  }\n};\n\nexport const mountEngine = (root: HTMLElement) => {\n  const engine = events(DIV(\"engine\"), (add) =>\n    add(\"click\", () => assign(\"screen\", \"movelist\"))\n  );\n  render(engine);\n  subscribe(\"engine\")(() => render(engine));\n\n  root.append(engine);\n};\n","import { hitClock } from \"./clock\";\nimport {\n  assign,\n  dispatch,\n  engineCompute,\n  engineMove,\n  get,\n  inputNone,\n  Move,\n  moveHist,\n  Nullable,\n  position,\n} from \"./store\";\n\ntype Outcome = \"½-½\" | \"1-0\" | \"0-1\";\ntype MessageReady = { readonly _tag: \"Ready\" };\ntype MessagePosition = { readonly _tag: \"Position\"; legalMoves: Move[] };\ntype MessageEngineMove = { readonly _tag: \"EngineMove\"; move: Move };\ntype MessageOutcome = { readonly _tag: \"Outcome\"; outcome: Outcome };\n\nlet socket: Nullable<WebSocket> = null;\n\nconst socketURL = () => {\n  const host = document.location.hostname;\n  const proto = host !== \"localhost\" && host !== \"127.0.0.1\" ? \"wss\" : \"ws\";\n  const port =\n    document.location.port.length > 0 && document.location.port !== \"8000\"\n      ? \"8000\"\n      : document.location.port;\n  if (port.length > 0) {\n    return `${proto}://${host}:${port}/play`;\n  }\n  return `${proto}://${host}/play`;\n};\n\nconst handlePosition = (message: MessagePosition) => {\n  console.log(\"handlePosition\", message);\n  assign(\"position\", position(\"white\", message.legalMoves));\n};\nconst handleEngineMove = (message: MessageEngineMove) => {\n  console.log(\"handleEngineMove\", message);\n  hitClock();\n  const legals = get(\"position\").legalMoves;\n  dispatch(\"moveList\", (list) => list.concat(moveHist(message.move, legals)));\n  assign(\"engine\", engineMove(message.move, legals));\n};\nconst handleOutcome = (message: MessageOutcome) => {\n  console.log(\"handleOutcome\", message);\n  console.log(\"Outcome\", message.outcome);\n  assign(\"started\", false);\n  assign(\"outcome\", message.outcome);\n  assign(\"screen\", \"movelist\");\n};\n\nconst handleIcoming = (onReady: () => void) => (event: MessageEvent) => {\n  const message = JSON.parse(event.data);\n\n  switch (message._tag) {\n    case \"Ready\": {\n      assign(\"started\", true);\n      onReady();\n      return console.log(\"server ready\");\n    }\n    case \"Position\":\n      return handlePosition(message as MessagePosition);\n    case \"EngineMove\":\n      return handleEngineMove(message as MessageEngineMove);\n    case \"Outcome\":\n      return handleOutcome(message as MessageOutcome);\n  }\n};\n\nconst CONNECT_TIMEOUT = 2000;\n\nexport const connect = () =>\n  new Promise<string>((resolve, reject) => {\n    const timeoutError = setTimeout(\n      () => reject(\"Timeout error\"),\n      CONNECT_TIMEOUT\n    );\n    socket = new WebSocket(socketURL());\n    socket.addEventListener(\n      \"message\",\n      handleIcoming(() => {\n        clearTimeout(timeoutError);\n        resolve(\"Ready\");\n      })\n    );\n    socket.addEventListener(\"close\", () => assign(\"started\", false));\n  });\n\nexport const sendMove = (move: Move) => {\n  if (get(\"started\")) {\n    if (socket === null) {\n      console.error(\"sending move on null socket\");\n    } else {\n      const clock = get(\"clock\");\n      assign(\"engine\", engineCompute());\n      if (clock._tag === \"running\") {\n        socket.send(\n          JSON.stringify({\n            _tag: \"Move\",\n            move,\n            white_time: clock.remaining_white,\n            black_time: clock.remaining_black,\n          })\n        );\n        assign(\"input\", inputNone());\n      }\n    }\n  } else {\n    console.error(\"game has not started\");\n  }\n};\n","import { hitClock } from \"./clock\";\nimport { emptyElement, events } from \"./lib/dom\";\nimport { DIV, replaceNodeContent } from \"./lib/html\";\nimport { sendMove } from \"./play\";\nimport { formatMove } from \"./san\";\nimport {\n  assign,\n  Color,\n  dispatch,\n  get,\n  getInputRole,\n  getMoveRole,\n  inputMove,\n  inputRole,\n  Move,\n  moveHist,\n  Nullable,\n  otherColor,\n  Role,\n  subscribe,\n} from \"./store\";\nimport {\n  BLACK_PAWN,\n  WHITE_PAWN,\n  BLACK_ROOK,\n  WHITE_ROOK,\n  BLACK_KNIGHT,\n  WHITE_KNIGHT,\n  BLACK_BISHOP,\n  WHITE_BISHOP,\n  BLACK_QUEEN,\n  WHITE_QUEEN,\n  BLACK_KING,\n  WHITE_KING,\n  ROLE_LIST,\n} from \"./util\";\n\nconst symbol = (role: Role, color: Color) => {\n  switch (role) {\n    case \"Pawn\":\n      return color === \"black\" ? BLACK_PAWN : WHITE_PAWN;\n    case \"Rook\":\n      return color === \"black\" ? BLACK_ROOK : WHITE_ROOK;\n    case \"Knight\":\n      return color === \"black\" ? BLACK_KNIGHT : WHITE_KNIGHT;\n    case \"Bishop\":\n      return color === \"black\" ? BLACK_BISHOP : WHITE_BISHOP;\n    case \"Queen\":\n      return color === \"black\" ? BLACK_QUEEN : WHITE_QUEEN;\n    case \"King\":\n      return color === \"black\" ? BLACK_KING : WHITE_KING;\n  }\n};\n\nconst hasMoves = (role: Role, moveList: Move[]) =>\n  moveList.some((m) => {\n    switch (m._tag) {\n      case \"Normal\":\n        return m.role === role;\n      case \"Castle\":\n        return role === \"King\";\n      case \"EnPassant\":\n        return role === \"Pawn\";\n    }\n  });\n\nconst selClass = (s: boolean) => (s ? \"selected\" : \"\");\n\n// const hasMovesClass = (s: boolean) => (s ? \"has-moves\" : \"has-no-moves\");\n\nconst renderPieces = (selected: Nullable<Role>, moveList: Move[]) =>\n  ROLE_LIST.map((role) =>\n    events(\n      DIV(\n        `piece ${role}  ${selClass(selected === role)}`,\n        symbol(role, hasMoves(role, moveList) ? \"black\" : \"white\")\n      ),\n      (add) => add(\"click\", () => assign(\"input\", inputRole(role)))\n    )\n  );\n\nconst renderMoves = (selected: Nullable<Role>, moveList: Move[]) =>\n  moveList\n    .filter((m) => getMoveRole(m) === selected)\n    .map((move) =>\n      events(DIV(\"move\", formatMove(move, moveList)), (add) =>\n        add(\"click\", () => {\n          hitClock();\n          assign(\"input\", inputMove(move));\n          dispatch(\"moveList\", (list) =>\n            list.concat(moveHist(move, get(\"position\").legalMoves))\n          );\n          dispatch(\"position\", (pos) => ({\n            ...pos,\n            turn: otherColor(pos.turn),\n          }));\n          sendMove(move);\n        })\n      )\n    );\n\nexport const mountInput = (root: HTMLElement) => {\n  const pieces = DIV(\"pieces\");\n  const moves = DIV(\"moves\");\n  const inputElement = DIV(\"input\", moves, pieces);\n  root.append(inputElement);\n\n  const update = () => {\n    if (get(\"position\").turn === \"white\") {\n      const replacePieces = replaceNodeContent(pieces);\n      const replaceMoves = replaceNodeContent(moves);\n      const pos = get(\"position\");\n      const input = get(\"input\");\n      const selectedRole = getInputRole(input);\n      replacePieces(...renderPieces(selectedRole, pos.legalMoves));\n      if (input._tag === \"role\") {\n        replaceMoves(...renderMoves(input.role, pos.legalMoves));\n      } else {\n        emptyElement(moves);\n      }\n    } else {\n      emptyElement(moves);\n      emptyElement(pieces);\n    }\n  };\n  subscribe(\"position\", \"input\")(update);\n\n  update();\n};\n","import { mountClock, startClock } from \"./clock\";\nimport { startingLegalMoves } from \"./data\";\nimport { mountEngine } from \"./engine\";\nimport { mountInput } from \"./input\";\nimport { assign, inputNone, position } from \"./store\";\nimport { connect } from \"./play\";\n\nexport const startGame = (\n  white_time_millis: number,\n  black_time_millis: number\n) => {\n  assign(\"position\", position(\"white\", startingLegalMoves));\n  assign(\"input\", inputNone());\n  assign(\"moveList\", []);\n  startClock(white_time_millis, black_time_millis);\n};\n\nexport const mountGame = (root: HTMLElement) => {\n  mountEngine(root);\n  mountInput(root);\n  mountClock(root);\n};\n","import { startGame } from \"./game\";\nimport { events } from \"./lib/dom\";\nimport { DIV } from \"./lib/html\";\nimport { connect } from \"./play\";\nimport { assign } from \"./store\";\n\nexport const mountHome = (root: HTMLElement) => {\n  root.append(\n    events(DIV(\"button-play\", \"play\"), (add) =>\n      add(\"click\", () =>\n        connect()\n          .then(() => {\n            startGame(10 * 60 * 1000, 60 * 1000);\n            assign(\"screen\", \"game\");\n          })\n          .catch((err) => console.error(\"Connectin failed\", err))\n      )\n    )\n  );\n};\n","import { allKeys, assign, get, Nullable, subscribe } from \"./store\";\n\nconst hasLockAPI = \"wakeLock\" in navigator;\n\nexport const screenLocker = () => {\n  if (hasLockAPI) {\n    // we don't know much about the real screen state\n    // so lets listen to whatever moves\n    const sub = subscribe(...allKeys());\n\n    let wsent: Nullable<WakeLockSentinel> = null;\n\n    sub(() => {\n      const started = get(\"started\");\n      const locked = get(\"lockScreen\");\n      if (started && !locked) {\n        navigator.wakeLock\n          .request(\"screen\")\n          .then((sentinel) => {\n            wsent = sentinel;\n            wsent.addEventListener(\"release\", () => {\n              console.log(\"Navigator released lock sentinel\");\n              assign(\"lockScreen\", false);\n            });\n            assign(\"lockScreen\", true);\n          })\n          .catch((err) => console.error(\"failed to lock screen\", err));\n      } else if (!started && locked && wsent !== null) {\n        wsent\n          .release()\n          .then(() => {\n            wsent = null;\n            assign(\"lockScreen\", false);\n          })\n          .catch((err) => console.error(\"failed to release screen\", err));\n      }\n    });\n  }\n};\n","import { events } from \"./lib/dom\";\nimport { DIV, SPAN } from \"./lib/html\";\nimport { formatMove } from \"./san\";\nimport { assign, get } from \"./store\";\n\nconst group = <T>(n: number, as: T[]): T[][] => {\n  const result: T[][] = [[]];\n  for (let i = 0; i < as.length; i++) {\n    let index = Math.floor(i / n);\n    if (index === result.length) {\n      result.push([]);\n    }\n    result[index].push(as[i]);\n  }\n  return result;\n};\n\nexport const mountMoveList = (root: HTMLElement) => {\n  const pairs = group(2, get(\"moveList\")).map((g, i) => {\n    const s0 = formatMove(g[0].move, g[0].legals, false);\n    if (g.length === 2) {\n      const s1 = formatMove(g[1].move, g[1].legals, false);\n      return DIV(\n        \"ply\",\n        SPAN(\"ord\", `${i + 1}.  `),\n        SPAN(\"moves\", SPAN(\"white\", s0), SPAN(\"black\", s1))\n      );\n    } else {\n      return DIV(\n        \"ply\",\n        SPAN(\"ord\", `${i + 1}.  `),\n        SPAN(\"moves\", SPAN(\"white\", s0))\n      );\n    }\n  });\n\n  const back = get(\"started\")\n    ? events(DIV(\"back-button\", \"back to game\"), (add) =>\n        add(\"click\", () => assign(\"screen\", \"game\"))\n      )\n    : events(DIV(\"back-button\", \"back home\"), (add) =>\n        add(\"click\", () => assign(\"screen\", \"home\"))\n      );\n\n  root.append(\n    DIV(\"movelist\", ...pairs, DIV(\"outcome\", get(\"outcome\") ?? \"...\"), back)\n  );\n};\n","import { fromNullable, map } from \"./lib/option\";\nimport \"./style.css\";\nimport { clearSubscriptions, get, StateKey, subscribe } from \"./store\";\nimport { mountHome } from \"./home\";\nimport { mountGame } from \"./game\";\nimport { emptyElement } from \"./lib/dom\";\nimport { screenLocker } from \"./lock-screen\";\nimport { mountMoveList } from \"./movelist\";\n\nconst fullscreen = (elem: HTMLElement) => (toggle: boolean) =>\n  toggle\n    ? elem\n        .requestFullscreen()\n        .then(() => console.log(\"enter fullscreen\"))\n        .catch((err) => console.error(\"failed to enter fullscreen\", err))\n    : document\n        .exitFullscreen()\n        .then(() => console.log(\"exir fullscreen\"))\n        .catch((err) => console.error(\"failed to exit fullscreen\", err));\n\nconst main = (root: HTMLElement) => {\n  screenLocker();\n  mountHome(root);\n\n  const toggleFullscreen = fullscreen(root);\n\n  let keepSubs: StateKey[] = [\"screen\", \"lockScreen\"];\n\n  subscribe(\"screen\")(() => {\n    clearSubscriptions((k) => keepSubs.includes(k));\n    emptyElement(root);\n    switch (get(\"screen\")) {\n      case \"home\": {\n        toggleFullscreen(false);\n        return mountHome(root);\n      }\n      case \"game\": {\n        toggleFullscreen(true);\n        return mountGame(root);\n      }\n      case \"movelist\": {\n        toggleFullscreen(false);\n        return mountMoveList(root);\n      }\n    }\n  });\n\n  // const mount = appendNode(root);\n  // mount(events(DIV(\"\", \"hit\"), (add) => add(\"click\", hit)));\n\n  // setTimeout(() => {\n  //   assign(\"input\", position(startingLegalMoves));\n  // }, 1000);\n};\n\nmap(main)(fromNullable(document.querySelector<HTMLDivElement>(\"#app\")));\n"],"names":["_none","_some","none","some","value","isOption","n","isNone","o","map","f","fromNullable","startingLegalMoves","file","s","rank","getMoveRole","move","otherColor","color","clockInitial","clockRunning","turn","start_time","remaining_white","remaining_black","clockFlag","other","position","legalMoves","inputNone","inputRole","role","inputMove","getInputRole","input","engineIdle","engineCompute","engineMove","legals","defaultEngine","moveHist","defaultInput","defaultPosition","defaultScreen","defaultMoveList","defaultClock","state","subs","dispatch","key","val","get","k","_","cb","assign","allKeys","subscribe","keys","callback","clearSubscriptions","filter","events","listener","emptyElement","elem","removeElement","keepChildren","parent","createBase","tag","appendText","text","node","createWithClass","className","appendLiteral","appendElement","appendBaseNode","appendNode","inner","replaceNodeContent","values","append","hasClass","c","addClass","removeClass","createWithChildren","ns","DIV","SPAN","iife","white","black","mountClock","root","renderClock","hitClock","toggleActive","updateClock","clockIt","stopClock","startClock","max_white","max_black","start","white_time","white_max_time","black_time","black_max_time","newState","floor","formatTime","millis","seconds","sec","minutes","hours","fs","fm","fh","r","a","h","setWhite","setBlack","now","total_spent","inc","ROLE_LIST","BLACK_PAWN","BLACK_ROOK","BLACK_KNIGHT","BLACK_BISHOP","BLACK_QUEEN","BLACK_KING","WHITE_PAWN","WHITE_ROOK","WHITE_KNIGHT","WHITE_BISHOP","WHITE_QUEEN","WHITE_KING","sanNormal","capture","to","promotion","sanCastle","side","sanCandidates","disambiguate","m","moves","ambiguous","ambiguous_file","ambiguous_rank","candidate","roleLetter","roleSymbol","fromMove","toString","san","symbol","result","formatMove","render","setEngine","mountEngine","engine","add","socket","socketURL","host","proto","port","handlePosition","message","handleEngineMove","list","handleOutcome","handleIcoming","onReady","event","CONNECT_TIMEOUT","connect","resolve","reject","timeoutError","sendMove","clock","hasMoves","moveList","selClass","renderPieces","selected","renderMoves","pos","mountInput","pieces","inputElement","update","replacePieces","replaceMoves","selectedRole","startGame","white_time_millis","black_time_millis","mountGame","mountHome","err","hasLockAPI","screenLocker","sub","wsent","started","locked","sentinel","group","as","i","index","mountMoveList","pairs","g","s0","s1","back","fullscreen","toggle","main","toggleFullscreen","keepSubs"],"mappings":"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"}